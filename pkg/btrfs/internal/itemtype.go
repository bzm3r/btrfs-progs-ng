// Code generated by Make.  DO NOT EDIT.

package internal

import "fmt"

type ItemType uint8

const (
	BLOCK_GROUP_ITEM_KEY     = ItemType(192)
	CHUNK_ITEM_KEY           = ItemType(228)
	DEV_EXTENT_KEY           = ItemType(204)
	DEV_ITEM_KEY             = ItemType(216)
	DIR_INDEX_KEY            = ItemType(96)
	DIR_ITEM_KEY             = ItemType(84)
	EXTENT_DATA_REF_KEY      = ItemType(178)
	EXTENT_ITEM_KEY          = ItemType(168)
	INODE_ITEM_KEY           = ItemType(1)
	INODE_REF_KEY            = ItemType(12)
	METADATA_ITEM_KEY        = ItemType(169)
	ORPHAN_ITEM_KEY          = ItemType(48)
	PERSISTENT_ITEM_KEY      = ItemType(249)
	QGROUP_RELATION_KEY      = ItemType(246)
	ROOT_ITEM_KEY            = ItemType(132)
	SHARED_BLOCK_REF_KEY     = ItemType(182)
	SHARED_DATA_REF_KEY      = ItemType(184)
	TREE_BLOCK_REF_KEY       = ItemType(176)
	UNTYPED_KEY              = ItemType(0)
	UUID_RECEIVED_SUBVOL_KEY = ItemType(252)
	UUID_SUBVOL_KEY          = ItemType(251)
	XATTR_ITEM_KEY           = ItemType(24)
)

func (t ItemType) String() string {
	names := map[ItemType]string{
		BLOCK_GROUP_ITEM_KEY:     "BLOCK_GROUP_ITEM",
		CHUNK_ITEM_KEY:           "CHUNK_ITEM",
		DEV_EXTENT_KEY:           "DEV_EXTENT",
		DEV_ITEM_KEY:             "DEV_ITEM",
		DIR_INDEX_KEY:            "DIR_INDEX",
		DIR_ITEM_KEY:             "DIR_ITEM",
		EXTENT_DATA_REF_KEY:      "EXTENT_DATA_REF",
		EXTENT_ITEM_KEY:          "EXTENT_ITEM",
		INODE_ITEM_KEY:           "INODE_ITEM",
		INODE_REF_KEY:            "INODE_REF",
		METADATA_ITEM_KEY:        "METADATA_ITEM",
		ORPHAN_ITEM_KEY:          "ORPHAN_ITEM",
		PERSISTENT_ITEM_KEY:      "PERSISTENT_ITEM",
		QGROUP_RELATION_KEY:      "QGROUP_RELATION",
		ROOT_ITEM_KEY:            "ROOT_ITEM",
		SHARED_BLOCK_REF_KEY:     "SHARED_BLOCK_REF",
		SHARED_DATA_REF_KEY:      "SHARED_DATA_REF",
		TREE_BLOCK_REF_KEY:       "TREE_BLOCK_REF",
		UNTYPED_KEY:              "UNTYPED",
		UUID_RECEIVED_SUBVOL_KEY: "UUID_KEY_RECEIVED_SUBVOL",
		UUID_SUBVOL_KEY:          "UUID_KEY_SUBVOL",
		XATTR_ITEM_KEY:           "XATTR_ITEM",
	}
	if name, ok := names[t]; ok {
		return name
	}
	return fmt.Sprintf("%d", t)
}
