// Code generated by Make.  DO NOT EDIT.

package btrfsitem

import (
	"reflect"

	"git.lukeshu.com/btrfs-progs-ng/lib/btrfs/btrfsprim"
)

const (
	BLOCK_GROUP_ITEM_KEY     = btrfsprim.BLOCK_GROUP_ITEM_KEY
	CHUNK_ITEM_KEY           = btrfsprim.CHUNK_ITEM_KEY
	DEV_EXTENT_KEY           = btrfsprim.DEV_EXTENT_KEY
	DEV_ITEM_KEY             = btrfsprim.DEV_ITEM_KEY
	DIR_INDEX_KEY            = btrfsprim.DIR_INDEX_KEY
	DIR_ITEM_KEY             = btrfsprim.DIR_ITEM_KEY
	EXTENT_CSUM_KEY          = btrfsprim.EXTENT_CSUM_KEY
	EXTENT_DATA_KEY          = btrfsprim.EXTENT_DATA_KEY
	EXTENT_DATA_REF_KEY      = btrfsprim.EXTENT_DATA_REF_KEY
	EXTENT_ITEM_KEY          = btrfsprim.EXTENT_ITEM_KEY
	FREE_SPACE_BITMAP_KEY    = btrfsprim.FREE_SPACE_BITMAP_KEY
	FREE_SPACE_EXTENT_KEY    = btrfsprim.FREE_SPACE_EXTENT_KEY
	FREE_SPACE_INFO_KEY      = btrfsprim.FREE_SPACE_INFO_KEY
	INODE_ITEM_KEY           = btrfsprim.INODE_ITEM_KEY
	INODE_REF_KEY            = btrfsprim.INODE_REF_KEY
	METADATA_ITEM_KEY        = btrfsprim.METADATA_ITEM_KEY
	ORPHAN_ITEM_KEY          = btrfsprim.ORPHAN_ITEM_KEY
	PERSISTENT_ITEM_KEY      = btrfsprim.PERSISTENT_ITEM_KEY
	QGROUP_INFO_KEY          = btrfsprim.QGROUP_INFO_KEY
	QGROUP_LIMIT_KEY         = btrfsprim.QGROUP_LIMIT_KEY
	QGROUP_RELATION_KEY      = btrfsprim.QGROUP_RELATION_KEY
	QGROUP_STATUS_KEY        = btrfsprim.QGROUP_STATUS_KEY
	ROOT_BACKREF_KEY         = btrfsprim.ROOT_BACKREF_KEY
	ROOT_ITEM_KEY            = btrfsprim.ROOT_ITEM_KEY
	ROOT_REF_KEY             = btrfsprim.ROOT_REF_KEY
	SHARED_BLOCK_REF_KEY     = btrfsprim.SHARED_BLOCK_REF_KEY
	SHARED_DATA_REF_KEY      = btrfsprim.SHARED_DATA_REF_KEY
	TREE_BLOCK_REF_KEY       = btrfsprim.TREE_BLOCK_REF_KEY
	UNTYPED_KEY              = btrfsprim.UNTYPED_KEY
	UUID_RECEIVED_SUBVOL_KEY = btrfsprim.UUID_RECEIVED_SUBVOL_KEY
	UUID_SUBVOL_KEY          = btrfsprim.UUID_SUBVOL_KEY
	XATTR_ITEM_KEY           = btrfsprim.XATTR_ITEM_KEY
)

var (
	blockGroupType      = reflect.TypeOf(BlockGroup{})
	chunkType           = reflect.TypeOf(Chunk{})
	devType             = reflect.TypeOf(Dev{})
	devExtentType       = reflect.TypeOf(DevExtent{})
	devStatsType        = reflect.TypeOf(DevStats{})
	dirEntryType        = reflect.TypeOf(DirEntry{})
	emptyType           = reflect.TypeOf(Empty{})
	extentType          = reflect.TypeOf(Extent{})
	extentCSumType      = reflect.TypeOf(ExtentCSum{})
	extentDataRefType   = reflect.TypeOf(ExtentDataRef{})
	fileExtentType      = reflect.TypeOf(FileExtent{})
	freeSpaceBitmapType = reflect.TypeOf(FreeSpaceBitmap{})
	freeSpaceHeaderType = reflect.TypeOf(FreeSpaceHeader{})
	freeSpaceInfoType   = reflect.TypeOf(FreeSpaceInfo{})
	inodeType           = reflect.TypeOf(Inode{})
	inodeRefsType       = reflect.TypeOf(InodeRefs{})
	metadataType        = reflect.TypeOf(Metadata{})
	qGroupInfoType      = reflect.TypeOf(QGroupInfo{})
	qGroupLimitType     = reflect.TypeOf(QGroupLimit{})
	qGroupStatusType    = reflect.TypeOf(QGroupStatus{})
	rootType            = reflect.TypeOf(Root{})
	rootRefType         = reflect.TypeOf(RootRef{})
	sharedDataRefType   = reflect.TypeOf(SharedDataRef{})
	uuidMapType         = reflect.TypeOf(UUIDMap{})
)

// keytype2gotype is used by UnmarshalItem.
var keytype2gotype = map[Type]reflect.Type{
	BLOCK_GROUP_ITEM_KEY:     blockGroupType,
	CHUNK_ITEM_KEY:           chunkType,
	DEV_EXTENT_KEY:           devExtentType,
	DEV_ITEM_KEY:             devType,
	DIR_INDEX_KEY:            dirEntryType,
	DIR_ITEM_KEY:             dirEntryType,
	EXTENT_CSUM_KEY:          extentCSumType,
	EXTENT_DATA_KEY:          fileExtentType,
	EXTENT_DATA_REF_KEY:      extentDataRefType,
	EXTENT_ITEM_KEY:          extentType,
	FREE_SPACE_BITMAP_KEY:    freeSpaceBitmapType,
	FREE_SPACE_EXTENT_KEY:    emptyType,
	FREE_SPACE_INFO_KEY:      freeSpaceInfoType,
	INODE_ITEM_KEY:           inodeType,
	INODE_REF_KEY:            inodeRefsType,
	METADATA_ITEM_KEY:        metadataType,
	ORPHAN_ITEM_KEY:          emptyType,
	PERSISTENT_ITEM_KEY:      devStatsType,
	QGROUP_INFO_KEY:          qGroupInfoType,
	QGROUP_LIMIT_KEY:         qGroupLimitType,
	QGROUP_RELATION_KEY:      emptyType,
	QGROUP_STATUS_KEY:        qGroupStatusType,
	ROOT_BACKREF_KEY:         rootRefType,
	ROOT_ITEM_KEY:            rootType,
	ROOT_REF_KEY:             rootRefType,
	SHARED_BLOCK_REF_KEY:     emptyType,
	SHARED_DATA_REF_KEY:      sharedDataRefType,
	TREE_BLOCK_REF_KEY:       emptyType,
	UUID_RECEIVED_SUBVOL_KEY: uuidMapType,
	UUID_SUBVOL_KEY:          uuidMapType,
	XATTR_ITEM_KEY:           dirEntryType,
}

// untypedObjID2gotype is used by UnmarshalItem.
var untypedObjID2gotype = map[btrfsprim.ObjID]reflect.Type{
	btrfsprim.FREE_SPACE_OBJECTID: freeSpaceHeaderType,
}

// isItem implements Item.
func (*BlockGroup) isItem()      {}
func (*Chunk) isItem()           {}
func (*Dev) isItem()             {}
func (*DevExtent) isItem()       {}
func (*DevStats) isItem()        {}
func (*DirEntry) isItem()        {}
func (*Empty) isItem()           {}
func (*Extent) isItem()          {}
func (*ExtentCSum) isItem()      {}
func (*ExtentDataRef) isItem()   {}
func (*FileExtent) isItem()      {}
func (*FreeSpaceBitmap) isItem() {}
func (*FreeSpaceHeader) isItem() {}
func (*FreeSpaceInfo) isItem()   {}
func (*Inode) isItem()           {}
func (*InodeRefs) isItem()       {}
func (*Metadata) isItem()        {}
func (*QGroupInfo) isItem()      {}
func (*QGroupLimit) isItem()     {}
func (*QGroupStatus) isItem()    {}
func (*Root) isItem()            {}
func (*RootRef) isItem()         {}
func (*SharedDataRef) isItem()   {}
func (*UUIDMap) isItem()         {}

// Type assertions.
var (
	_ Item = (*BlockGroup)(nil)
	_ Item = (*Chunk)(nil)
	_ Item = (*Dev)(nil)
	_ Item = (*DevExtent)(nil)
	_ Item = (*DevStats)(nil)
	_ Item = (*DirEntry)(nil)
	_ Item = (*Empty)(nil)
	_ Item = (*Extent)(nil)
	_ Item = (*ExtentCSum)(nil)
	_ Item = (*ExtentDataRef)(nil)
	_ Item = (*FileExtent)(nil)
	_ Item = (*FreeSpaceBitmap)(nil)
	_ Item = (*FreeSpaceHeader)(nil)
	_ Item = (*FreeSpaceInfo)(nil)
	_ Item = (*Inode)(nil)
	_ Item = (*InodeRefs)(nil)
	_ Item = (*Metadata)(nil)
	_ Item = (*QGroupInfo)(nil)
	_ Item = (*QGroupLimit)(nil)
	_ Item = (*QGroupStatus)(nil)
	_ Item = (*Root)(nil)
	_ Item = (*RootRef)(nil)
	_ Item = (*SharedDataRef)(nil)
	_ Item = (*UUIDMap)(nil)
)
